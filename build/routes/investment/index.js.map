{"version":3,"sources":["../../../src/routes/investment/index.js"],"names":["investment","req","res","next","params","idInvestor","quantity","category","UserService","get","investor","getClientsByCategory","clients","response","undefined","length","updateUsers","users","json","loan","body","query","clientId","amount","parcels","client","active","amountRequested","parseFloat","update"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEO,IAAMA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACmBF,GAAG,CAACG,MADvB,EAChBC,UADgB,eAChBA,UADgB,EACJC,QADI,eACJA,QADI,EACMC,QADN,eACMA,QADN;AAAA;AAAA;AAAA,mBAIDC,kBAAYC,GAAZ,CAAgBJ,UAAhB,CAJC;;AAAA;AAIlBK,YAAAA,QAJkB;AAAA;AAAA,mBAKFF,kBAAYG,oBAAZ,CAAiCN,UAAjC,EAA6CE,QAA7C,CALE;;AAAA;AAKlBK,YAAAA,OALkB;AAMlBC,YAAAA,QANkB,GAMP,EANO;;AAAA,kBAOlBD,OAAO,KAAKE,SAAZ,IAAyBF,OAAO,KAAK,IAArC,IAA6CA,OAAO,CAACG,MAAR,GAAiB,CAP5C;AAAA;AAAA;AAAA;;AAQhBf,YAAAA,WARgB,GAQF,yBAAOU,QAAP,EAAiBJ,QAAjB,EAA2BM,OAA3B,CARE;AAAA;AAAA,mBASHJ,kBAAYQ,WAAZ,CAAwBhB,WAAU,CAACiB,KAAnC,CATG;;AAAA;AASpBJ,YAAAA,QAToB;;AAAA;AAWtBX,YAAAA,GAAG,CAACgB,IAAJ,CAASL,QAAT;AAXsB;AAAA;;AAAA;AAAA;AAAA;AAatBV,YAAAA,IAAI,aAAJ;;AAbsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVH,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAiBA,IAAMmB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOlB,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEsBF,GAAG,CAACG,MAAJ,IAAcH,GAAG,CAACmB,IAAlB,IAA0BnB,GAAG,CAACoB,KAFpD,EAERC,QAFQ,SAERA,QAFQ,EAEEC,MAFF,SAEEA,MAFF,EAEUC,OAFV,SAEUA,OAFV;AAAA;AAAA,mBAGGhB,kBAAYC,GAAZ,CAAgBa,QAAhB,CAHH;;AAAA;AAGZG,YAAAA,MAHY;AAIhBA,YAAAA,MAAM,CAACN,IAAP,CAAYO,MAAZ,GAAqB,IAArB;AACAD,YAAAA,MAAM,CAACN,IAAP,CAAYQ,eAAZ,GAA8BC,UAAU,CAACL,MAAD,CAAxC;AACAE,YAAAA,MAAM,CAACN,IAAP,CAAYK,OAAZ,GAAsBA,OAAtB;AANgB;AAAA,mBAOKhB,kBAAYqB,MAAZ,CAAmBJ,MAAnB,CAPL;;AAAA;AAOZZ,YAAAA,QAPY;AAQhBX,YAAAA,GAAG,CAACgB,IAAJ,CAASL,QAAT;AARgB;AAAA;;AAAA;AAAA;AAAA;AAUhBV,YAAAA,IAAI,cAAJ;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAJgB,IAAI;AAAA;AAAA;AAAA,GAAV","sourcesContent":["import { invest } from '../../services/investments'\nimport UserService from '../../services/users'\n\nexport const investment = async (req, res, next) => {\n  const { idInvestor, quantity, category } = req.params\n\n  try {\n    let investor = await UserService.get(idInvestor)\n    let clients = await UserService.getClientsByCategory(idInvestor, category)\n    let response = {}\n    if (clients !== undefined && clients !== null && clients.length > 0) {\n      let investment  = invest(investor, quantity, clients)\n      response = await UserService.updateUsers(investment.users)\n    }\n    res.json(response)\n  } catch (e) {\n    next(e)\n  }\n}\n\nexport const loan = async (req, res, next) => {\n  try {\n    const { clientId, amount, parcels } = req.params || req.body || req.query\n    let client = await UserService.get(clientId)\n    client.loan.active = true\n    client.loan.amountRequested = parseFloat(amount)\n    client.loan.parcels = parcels\n    let response = await UserService.update(client)\n    res.json(response)\n  } catch (e) {\n    next(e)\n  }\n}"],"file":"index.js"}