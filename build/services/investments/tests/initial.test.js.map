{"version":3,"sources":["../../../../src/services/investments/tests/initial.test.js"],"names":["describe","clients","beforeEach","id","category","bag","amount","loan","active","amountRequested","amountReceived","it","expect","toBe","resultExpected","result","toStrictEqual"],"mappings":"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","sourcesContent":["\nimport { spreadMoney, countClientsWithLoansActives} from '../index'\n\ndescribe('Servico para gerenciar o Investimento', () => {\n  \n  let clients\n\n  beforeEach(() => {\n    clients = [\n      { id: 1, category: \"A\", bag: { amount: 0 },\n        loan: { active: true, amountRequested: 50, amountReceived: 0 }\n      },\n      { id: 2, category: \"A\", bag: { amount: 0 },\n        loan: { active: true, amountRequested: 180, amountReceived: 0 }\n      }\n    ]\n  })\n\n  it('', () => {\n    expect(countClientsWithLoansActives(clients)).toBe(2)\n  })\n\n  it('Deve dividir dinheiro igualmente para todos os emprestimos.', () => {\n    const resultExpected = { \n      amount: 0, \n      clients: [\n        { id: 1, category: \"A\", bag: { amount: 0 },\n          loan: { active: false, amountRequested: 50, amountReceived: 50 }\n        },\n        { id: 2, category: \"A\", bag: { amount: 0 },\n          loan: { active: true, amountRequested: 180, amountReceived: 160 }\n        }\n      ]\n    }\n\n    const result = spreadMoney(clients, 210)\n    expect(result).toStrictEqual(resultExpected)\n  })\n\n  it('Deve somente passar a quantidade necessÃ¡ria', () => {\n    clients[1] = { \n        id: 2, category: \"A\", bag: { amount: 0 },\n        loan: { active: true, amountRequested: 50, amountReceived: 0 }\n      }\n\n    const resultExpected = { amount: 20, clients: [\n      { id: 1, category: \"A\", bag: { amount: 0 },\n        loan:{ active: false, amountRequested: 50, amountReceived: 50 }\n      },\n      { id: 2, category: \"A\", bag: { amount: 0 },\n        loan:{ active: false, amountRequested: 50, amountReceived: 50 }\n      }\n    ]}\n    const result = spreadMoney(clients, 120)\n    expect(result).toStrictEqual(resultExpected)\n  })\n\n})"],"file":"initial.test.js"}