{"version":3,"sources":["../../../src/services/users/index.js"],"names":["client","axios","create","baseURL","timeout","get","id","response","data","shift","update","investor","put","updateUsers","users","Promise","all","map","user","getClientsByCategory","idInvestor","category","UserService","list"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,kBAAMC,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,iDADiB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAAb,CAAf;;AAKA,IAAMC,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaN,MAAM,CAACK,GAAP,oBAAuBC,EAAvB,EADb;;AAAA;AACJC,YAAAA,QADI;AAAA,6CAEHA,QAAQ,CAACC,IAAT,CAAcC,KAAd,EAFG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAHJ,GAAG;AAAA;AAAA;AAAA,GAAT;;AAKA,IAAMK,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUX,MAAM,CAACY,GAAP,iBAAoBD,QAAQ,CAACL,EAA7B,GAAmCK,QAAnC,CADV;;AAAA;AACPJ,YAAAA,QADO;AAAA,8CAENA,QAAQ,CAACC,IAFH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANE,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAKA,IAAMG,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,8CACXC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAW,kBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACfR,MAAM,CAACQ,IAAD,CADS;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAMA,IAAMM,oBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAOC,UAAP,EAAmBC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJrB,MAAM,CAACK,GAAP,uBAA0Be,UAA1B,uBAAiDC,QAAjD,EADI;;AAAA;AACrBd,YAAAA,QADqB;AAAA,8CAEpBA,QAAQ,CAACC,IAFW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBW,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAKA,IAAMG,WAAW,GAAG;AAClBjB,EAAAA,GAAG,EAAEA,GADa;AAElBK,EAAAA,MAAM,EAAEA,MAFU;AAGlBG,EAAAA,WAAW,EAAEA,WAHK;AAIlBM,EAAAA,oBAAoB,EAAEA,oBAJJ;AAKlBI,EAAAA,IAAI,EAAE,gBAAM,CAAE,CALI;AAMlBrB,EAAAA,MAAM,EAAE,gBAACgB,IAAD,EAAU;AAAE,WAAOA,IAAP;AAAa;AANf,CAApB;eASeI,W","sourcesContent":["import axios from \"axios\"\n\nconst client = axios.create({\n  baseURL: 'https://umhelp-users-api-service.herokuapp.com/',\n  timeout: 3000\n})\n\nconst get = async (id) => {\n  const response = await client.get(`/user?id=${id}`)\n  return response.data.shift()\n}\n\nconst update = async (investor) => {\n  const response = await client.put(`/user/${investor.id}`, investor)\n  return response.data\n}\n\nconst updateUsers = async (users) => {\n  return Promise.all(users.map( async user => { \n    return await update(user)\n  }))\n}\n\nconst getClientsByCategory = async (idInvestor, category) => {\n  const response = await client.get(`/user?id_ne=${idInvestor}&category=${category}`)\n  return response.data\n}\n\nconst UserService = {\n  get: get,\n  update: update,\n  updateUsers: updateUsers,\n  getClientsByCategory: getClientsByCategory,\n  list: () => {}, \n  create: (user) => { return user }\n}\n\nexport default UserService"],"file":"index.js"}